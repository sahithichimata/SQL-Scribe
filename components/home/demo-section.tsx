"use client"

import { useState } from "react"
import { motion } from "framer-motion"
import { Card, CardContent } from "@/components/ui/card"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Button } from "@/components/ui/button"
import { CodeHighlight } from "@/components/ui/code-highlight"
import { ArrowRight } from "lucide-react"

const demoQueries = {
  postgres: {
    naturalLanguage: "Show me all customers who made a purchase in the last 30 days",
    sql: `SELECT 
  c.customer_id,
  c.first_name,
  c.last_name,
  c.email,
  COUNT(o.order_id) as order_count,
  SUM(o.total_amount) as total_spent
FROM 
  customers c
JOIN 
  orders o ON c.customer_id = o.customer_id
WHERE 
  o.order_date >= CURRENT_DATE - INTERVAL '30 days'
GROUP BY 
  c.customer_id, c.first_name, c.last_name, c.email
ORDER BY 
  total_spent DESC;`,
    explanation: "This query joins the customers and orders tables to find all customers who placed orders within the last 30 days. It calculates the total number of orders and the total amount spent by each customer during this period, sorting the results by total spent in descending order."
  },
  mysql: {
    naturalLanguage: "Find the top 5 products by revenue last quarter",
    sql: `SELECT 
  p.product_id, 
  p.product_name,
  p.category,
  ROUND(SUM(oi.quantity * oi.unit_price), 2) AS revenue
FROM 
  products p
JOIN 
  order_items oi ON p.product_id = oi.product_id
JOIN 
  orders o ON oi.order_id = o.order_id
WHERE 
  o.order_date BETWEEN 
    DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH) AND CURRENT_DATE
GROUP BY 
  p.product_id, p.product_name, p.category
ORDER BY 
  revenue DESC
LIMIT 5;`,
    explanation: "This query calculates the total revenue generated by each product in the last quarter. It joins the products, order_items, and orders tables, filtering for orders placed in the last 3 months. The results are grouped by product and sorted by revenue in descending order, with only the top 5 products returned."
  },
  sqlite: {
    naturalLanguage: "Find all employees who haven't completed compliance training",
    sql: `SELECT 
  e.employee_id,
  e.first_name,
  e.last_name,
  e.department,
  e.hire_date
FROM 
  employees e
LEFT JOIN 
  training_completions tc ON e.employee_id = tc.employee_id 
  AND tc.training_course_id = 'COMP-101'
WHERE 
  tc.completion_date IS NULL
ORDER BY 
  e.department, e.last_name;`,
    explanation: "This query identifies employees who haven't completed the compliance training course (COMP-101). It uses a LEFT JOIN between the employees table and the training_completions table, filtering for NULL completion dates which indicates the training hasn't been completed. The results are ordered by department and last name for easy readability."
  }
}

export function DemoSection() {
  const [selectedDialect, setSelectedDialect] = useState("postgres")
  
  return (
    <div className="py-24 container">
      <div className="text-center mb-16">
        <motion.h2 
          initial={{ opacity: 0 }}
          whileInView={{ opacity: 1 }}
          viewport={{ once: true }}
          transition={{ duration: 0.5 }}
          className="text-3xl md:text-4xl font-bold"
        >
          See it in Action
        </motion.h2>
        <motion.p 
          initial={{ opacity: 0 }}
          whileInView={{ opacity: 1 }}
          viewport={{ once: true }}
          transition={{ delay: 0.2, duration: 0.5 }}
          className="mt-4 text-lg text-muted-foreground max-w-2xl mx-auto"
        >
          Transform natural language into optimized SQL queries in seconds
        </motion.p>
      </div>

      <motion.div
        initial={{ opacity: 0, y: 20 }}
        whileInView={{ opacity: 1, y: 0 }}
        viewport={{ once: true }}
        transition={{ delay: 0.3, duration: 0.5 }}
      >
        <Tabs defaultValue="postgres" className="max-w-4xl mx-auto">
          <div className="flex justify-center mb-6">
            <TabsList>
              <TabsTrigger 
                value="postgres" 
                onClick={() => setSelectedDialect("postgres")}
              >
                PostgreSQL
              </TabsTrigger>
              <TabsTrigger 
                value="mysql" 
                onClick={() => setSelectedDialect("mysql")}
              >
                MySQL
              </TabsTrigger>
              <TabsTrigger 
                value="sqlite" 
                onClick={() => setSelectedDialect("sqlite")}
              >
                SQLite
              </TabsTrigger>
            </TabsList>
          </div>

          {["postgres", "mysql", "sqlite"].map((dialect) => (
            <TabsContent key={dialect} value={dialect} className="mt-0">
              <Card className="rounded-xl border-border/50">
                <CardContent className="p-6">
                  <div className="mb-6">
                    <h3 className="text-lg font-medium mb-2">Natural Language Input</h3>
                    <div className="bg-muted p-4 rounded-md text-foreground">
                      {demoQueries[dialect as keyof typeof demoQueries].naturalLanguage}
                    </div>
                  </div>

                  <div className="mb-6">
                    <div className="flex justify-between items-center mb-2">
                      <h3 className="text-lg font-medium">Generated SQL Query</h3>
                      <div className="text-xs px-2 py-1 bg-primary/10 text-primary rounded-full">
                        Optimization Score: 95/100
                      </div>
                    </div>
                    <CodeHighlight
                      language="sql"
                      code={demoQueries[dialect as keyof typeof demoQueries].sql}
                    />
                  </div>

                  <div>
                    <h3 className="text-lg font-medium mb-2">Explanation</h3>
                    <p className="text-muted-foreground text-sm">
                      {demoQueries[dialect as keyof typeof demoQueries].explanation}
                    </p>
                  </div>
                </CardContent>
              </Card>
            </TabsContent>
          ))}
          
          <div className="flex justify-center mt-8">
            <Button size="lg" className="group">
              <span>Try It Yourself</span>
              <ArrowRight className="ml-2 h-4 w-4 group-hover:translate-x-1 transition-transform" />
            </Button>
          </div>
        </Tabs>
      </motion.div>
    </div>
  )
}